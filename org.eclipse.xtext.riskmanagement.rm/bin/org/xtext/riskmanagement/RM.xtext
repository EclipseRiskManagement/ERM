// automatically generated by Xtext
grammar org.xtext.riskmanagement.RM with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.eclipse.model.riskmanagement/model/riskmanagement.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	{Model}
	'Model'
	name=EString;




Risk returns Risk:
	Risk_Impl | Opportunity | Uncertainty | Threat;



EString returns ecore::EString:
	STRING | ID;

AssetBasedModel returns AssetBasedModel:
	'AssetBasedModel'
	name=EString
	'{'
		'asset' asset=Asset
	'}';

ScenarioBasedModel returns ScenarioBasedModel:
	'ScenarioBasedModel'
	name=EString
	'{'
		'scenario' '{' scenario+=Scenario ( "," scenario+=Scenario)* '}' 
	'}';

Asset returns Asset:
	'Asset'
	name=EString
	'{'
		'has' '(' has+=[Vulnerable|EString] ( "," has+=[Vulnerable|EString])* ')' 
		('causes' '{' causes+=Risk ( "," causes+=Risk)* '}' )?
	'}';

Vulnerable returns Vulnerable:
	'Vulnerable'
	name=EString
	'{'
		'indicates' '(' indicates+=[Consequence|EString] ( "," indicates+=[Consequence|EString])* ')' 
	'}';

Risk_Impl returns Risk:
	'Risk'
	name=EString
	'{'
		'view' view=View
		'occurrence' occurrence=EInt
		'impact' impact=EInt
		'produces' '{' produces+=Consequence ( "," produces+=Consequence)* '}' 
	'}';

Consequence returns Consequence:
	{Consequence}
	'Consequence'
	name=EString;

enum View returns View:
				Positive = 'Positive' | Neutral = 'Neutral' | Negative = 'Negative';

EInt returns ecore::EInt:
	'-'? INT;

Opportunity returns Opportunity:
	'Opportunity'
	name=EString
	'{'
		'view' view=View
		'occurrence' occurrence=EInt
		'impact' impact=EInt
		'produces' '{' produces+=Consequence ( "," produces+=Consequence)* '}' 
	'}';

Uncertainty returns Uncertainty:
	'Uncertainty'
	name=EString
	'{'
		'view' view=View
		'occurrence' occurrence=EInt
		'impact' impact=EInt
		'produces' '{' produces+=Consequence ( "," produces+=Consequence)* '}' 
	'}';

Threat returns Threat:
	'Threat'
	name=EString
	'{'
		'view' view=View
		'occurrence' occurrence=EInt
		'impact' impact=EInt
		'produces' '{' produces+=Consequence ( "," produces+=Consequence)* '}' 
	'}';

Scenario returns Scenario:
	'Scenario'
	name=EString
	'{'
		('subscenario' '{' subscenario+=Scenario ( "," subscenario+=Scenario)* '}' )?
		'action' '{' action+=Action ( "," action+=Action)* '}' 
	'}';

Action returns Action:
	{Action}
	'Action'
	name=EString
	'{'
		('asset' '{' asset+=Asset ( "," asset+=Asset)* '}' )?
	'}';
