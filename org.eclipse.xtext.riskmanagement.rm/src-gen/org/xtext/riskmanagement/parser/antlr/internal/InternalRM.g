/*
 * generated by Xtext 2.16.0
 */
grammar InternalRM;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.riskmanagement.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.riskmanagement.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.riskmanagement.services.RMGrammarAccess;

}

@parser::members {

 	private RMGrammarAccess grammarAccess;

    public InternalRMParser(TokenStream input, RMGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RMGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		otherlv_1='Model'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRisk
entryRuleRisk returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRiskRule()); }
	iv_ruleRisk=ruleRisk
	{ $current=$iv_ruleRisk.current; }
	EOF;

// Rule Risk
ruleRisk returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRiskAccess().getRisk_ImplParserRuleCall_0());
		}
		this_Risk_Impl_0=ruleRisk_Impl
		{
			$current = $this_Risk_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRiskAccess().getOpportunityParserRuleCall_1());
		}
		this_Opportunity_1=ruleOpportunity
		{
			$current = $this_Opportunity_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRiskAccess().getUncertaintyParserRuleCall_2());
		}
		this_Uncertainty_2=ruleUncertainty
		{
			$current = $this_Uncertainty_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRiskAccess().getThreatParserRuleCall_3());
		}
		this_Threat_3=ruleThreat
		{
			$current = $this_Threat_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAsset
entryRuleAsset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssetRule()); }
	iv_ruleAsset=ruleAsset
	{ $current=$iv_ruleAsset.current; }
	EOF;

// Rule Asset
ruleAsset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Asset'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssetAccess().getAssetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssetAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssetRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='has'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssetAccess().getHasKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getAssetAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAssetAccess().getHasVulnerableCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getAssetAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssetRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAssetAccess().getHasVulnerableCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getAssetAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_9='causes'
			{
				newLeafNode(otherlv_9, grammarAccess.getAssetAccess().getCausesKeyword_8_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssetAccess().getCausesRiskParserRuleCall_8_2_0());
					}
					lv_causes_11_0=ruleRisk
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssetRule());
						}
						add(
							$current,
							"causes",
							lv_causes_11_0,
							"org.xtext.riskmanagement.RM.Risk");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getAssetAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAssetAccess().getCausesRiskParserRuleCall_8_3_1_0());
						}
						lv_causes_13_0=ruleRisk
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssetRule());
							}
							add(
								$current,
								"causes",
								lv_causes_13_0,
								"org.xtext.riskmanagement.RM.Risk");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleRisk_Impl
entryRuleRisk_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRisk_ImplRule()); }
	iv_ruleRisk_Impl=ruleRisk_Impl
	{ $current=$iv_ruleRisk_Impl.current; }
	EOF;

// Rule Risk_Impl
ruleRisk_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Risk'
		{
			newLeafNode(otherlv_0, grammarAccess.getRisk_ImplAccess().getRiskKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRisk_ImplAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRisk_ImplRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRisk_ImplAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='view'
		{
			newLeafNode(otherlv_3, grammarAccess.getRisk_ImplAccess().getViewKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRisk_ImplAccess().getViewViewEnumRuleCall_4_0());
				}
				lv_view_4_0=ruleView
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRisk_ImplRule());
					}
					set(
						$current,
						"view",
						lv_view_4_0,
						"org.xtext.riskmanagement.RM.View");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='occurrence'
		{
			newLeafNode(otherlv_5, grammarAccess.getRisk_ImplAccess().getOccurrenceKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRisk_ImplAccess().getOccurrenceEIntParserRuleCall_6_0());
				}
				lv_occurrence_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRisk_ImplRule());
					}
					set(
						$current,
						"occurrence",
						lv_occurrence_6_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='impact'
		{
			newLeafNode(otherlv_7, grammarAccess.getRisk_ImplAccess().getImpactKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRisk_ImplAccess().getImpactEIntParserRuleCall_8_0());
				}
				lv_impact_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRisk_ImplRule());
					}
					set(
						$current,
						"impact",
						lv_impact_8_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='produces'
		{
			newLeafNode(otherlv_9, grammarAccess.getRisk_ImplAccess().getProducesKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getRisk_ImplAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRisk_ImplAccess().getProducesConsequenceParserRuleCall_11_0());
				}
				lv_produces_11_0=ruleConsequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRisk_ImplRule());
					}
					add(
						$current,
						"produces",
						lv_produces_11_0,
						"org.xtext.riskmanagement.RM.Consequence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getRisk_ImplAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRisk_ImplAccess().getProducesConsequenceParserRuleCall_12_1_0());
					}
					lv_produces_13_0=ruleConsequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRisk_ImplRule());
						}
						add(
							$current,
							"produces",
							lv_produces_13_0,
							"org.xtext.riskmanagement.RM.Consequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getRisk_ImplAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getRisk_ImplAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleConsequence
entryRuleConsequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConsequenceRule()); }
	iv_ruleConsequence=ruleConsequence
	{ $current=$iv_ruleConsequence.current; }
	EOF;

// Rule Consequence
ruleConsequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConsequenceAccess().getConsequenceAction_0(),
					$current);
			}
		)
		otherlv_1='Consequence'
		{
			newLeafNode(otherlv_1, grammarAccess.getConsequenceAccess().getConsequenceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConsequenceAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConsequenceRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleOpportunity
entryRuleOpportunity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpportunityRule()); }
	iv_ruleOpportunity=ruleOpportunity
	{ $current=$iv_ruleOpportunity.current; }
	EOF;

// Rule Opportunity
ruleOpportunity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Opportunity'
		{
			newLeafNode(otherlv_0, grammarAccess.getOpportunityAccess().getOpportunityKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpportunityAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpportunityRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOpportunityAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='view'
		{
			newLeafNode(otherlv_3, grammarAccess.getOpportunityAccess().getViewKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpportunityAccess().getViewViewEnumRuleCall_4_0());
				}
				lv_view_4_0=ruleView
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpportunityRule());
					}
					set(
						$current,
						"view",
						lv_view_4_0,
						"org.xtext.riskmanagement.RM.View");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='occurrence'
		{
			newLeafNode(otherlv_5, grammarAccess.getOpportunityAccess().getOccurrenceKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpportunityAccess().getOccurrenceEIntParserRuleCall_6_0());
				}
				lv_occurrence_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpportunityRule());
					}
					set(
						$current,
						"occurrence",
						lv_occurrence_6_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='impact'
		{
			newLeafNode(otherlv_7, grammarAccess.getOpportunityAccess().getImpactKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpportunityAccess().getImpactEIntParserRuleCall_8_0());
				}
				lv_impact_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpportunityRule());
					}
					set(
						$current,
						"impact",
						lv_impact_8_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='produces'
		{
			newLeafNode(otherlv_9, grammarAccess.getOpportunityAccess().getProducesKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getOpportunityAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpportunityAccess().getProducesConsequenceParserRuleCall_11_0());
				}
				lv_produces_11_0=ruleConsequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpportunityRule());
					}
					add(
						$current,
						"produces",
						lv_produces_11_0,
						"org.xtext.riskmanagement.RM.Consequence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getOpportunityAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOpportunityAccess().getProducesConsequenceParserRuleCall_12_1_0());
					}
					lv_produces_13_0=ruleConsequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOpportunityRule());
						}
						add(
							$current,
							"produces",
							lv_produces_13_0,
							"org.xtext.riskmanagement.RM.Consequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getOpportunityAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getOpportunityAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleUncertainty
entryRuleUncertainty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUncertaintyRule()); }
	iv_ruleUncertainty=ruleUncertainty
	{ $current=$iv_ruleUncertainty.current; }
	EOF;

// Rule Uncertainty
ruleUncertainty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Uncertainty'
		{
			newLeafNode(otherlv_0, grammarAccess.getUncertaintyAccess().getUncertaintyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertaintyAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertaintyRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUncertaintyAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='view'
		{
			newLeafNode(otherlv_3, grammarAccess.getUncertaintyAccess().getViewKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertaintyAccess().getViewViewEnumRuleCall_4_0());
				}
				lv_view_4_0=ruleView
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertaintyRule());
					}
					set(
						$current,
						"view",
						lv_view_4_0,
						"org.xtext.riskmanagement.RM.View");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='occurrence'
		{
			newLeafNode(otherlv_5, grammarAccess.getUncertaintyAccess().getOccurrenceKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertaintyAccess().getOccurrenceEIntParserRuleCall_6_0());
				}
				lv_occurrence_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertaintyRule());
					}
					set(
						$current,
						"occurrence",
						lv_occurrence_6_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='impact'
		{
			newLeafNode(otherlv_7, grammarAccess.getUncertaintyAccess().getImpactKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertaintyAccess().getImpactEIntParserRuleCall_8_0());
				}
				lv_impact_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertaintyRule());
					}
					set(
						$current,
						"impact",
						lv_impact_8_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='produces'
		{
			newLeafNode(otherlv_9, grammarAccess.getUncertaintyAccess().getProducesKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getUncertaintyAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertaintyAccess().getProducesConsequenceParserRuleCall_11_0());
				}
				lv_produces_11_0=ruleConsequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertaintyRule());
					}
					add(
						$current,
						"produces",
						lv_produces_11_0,
						"org.xtext.riskmanagement.RM.Consequence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getUncertaintyAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUncertaintyAccess().getProducesConsequenceParserRuleCall_12_1_0());
					}
					lv_produces_13_0=ruleConsequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUncertaintyRule());
						}
						add(
							$current,
							"produces",
							lv_produces_13_0,
							"org.xtext.riskmanagement.RM.Consequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getUncertaintyAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getUncertaintyAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleThreat
entryRuleThreat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThreatRule()); }
	iv_ruleThreat=ruleThreat
	{ $current=$iv_ruleThreat.current; }
	EOF;

// Rule Threat
ruleThreat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Threat'
		{
			newLeafNode(otherlv_0, grammarAccess.getThreatAccess().getThreatKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThreatAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThreatRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getThreatAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='view'
		{
			newLeafNode(otherlv_3, grammarAccess.getThreatAccess().getViewKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThreatAccess().getViewViewEnumRuleCall_4_0());
				}
				lv_view_4_0=ruleView
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThreatRule());
					}
					set(
						$current,
						"view",
						lv_view_4_0,
						"org.xtext.riskmanagement.RM.View");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='occurrence'
		{
			newLeafNode(otherlv_5, grammarAccess.getThreatAccess().getOccurrenceKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThreatAccess().getOccurrenceEIntParserRuleCall_6_0());
				}
				lv_occurrence_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThreatRule());
					}
					set(
						$current,
						"occurrence",
						lv_occurrence_6_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='impact'
		{
			newLeafNode(otherlv_7, grammarAccess.getThreatAccess().getImpactKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThreatAccess().getImpactEIntParserRuleCall_8_0());
				}
				lv_impact_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThreatRule());
					}
					set(
						$current,
						"impact",
						lv_impact_8_0,
						"org.xtext.riskmanagement.RM.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='produces'
		{
			newLeafNode(otherlv_9, grammarAccess.getThreatAccess().getProducesKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getThreatAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThreatAccess().getProducesConsequenceParserRuleCall_11_0());
				}
				lv_produces_11_0=ruleConsequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThreatRule());
					}
					add(
						$current,
						"produces",
						lv_produces_11_0,
						"org.xtext.riskmanagement.RM.Consequence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getThreatAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getThreatAccess().getProducesConsequenceParserRuleCall_12_1_0());
					}
					lv_produces_13_0=ruleConsequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getThreatRule());
						}
						add(
							$current,
							"produces",
							lv_produces_13_0,
							"org.xtext.riskmanagement.RM.Consequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getThreatAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getThreatAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subscenario'
			{
				newLeafNode(otherlv_3, grammarAccess.getScenarioAccess().getSubscenarioKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioAccess().getSubscenarioScenarioParserRuleCall_3_2_0());
					}
					lv_subscenario_5_0=ruleScenario
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioRule());
						}
						add(
							$current,
							"subscenario",
							lv_subscenario_5_0,
							"org.xtext.riskmanagement.RM.Scenario");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getScenarioAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScenarioAccess().getSubscenarioScenarioParserRuleCall_3_3_1_0());
						}
						lv_subscenario_7_0=ruleScenario
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScenarioRule());
							}
							add(
								$current,
								"subscenario",
								lv_subscenario_7_0,
								"org.xtext.riskmanagement.RM.Scenario");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='action'
		{
			newLeafNode(otherlv_9, grammarAccess.getScenarioAccess().getActionKeyword_4());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getActionActionParserRuleCall_6_0());
				}
				lv_action_11_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					add(
						$current,
						"action",
						lv_action_11_0,
						"org.xtext.riskmanagement.RM.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getScenarioAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioAccess().getActionActionParserRuleCall_7_1_0());
					}
					lv_action_13_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioRule());
						}
						add(
							$current,
							"action",
							lv_action_13_0,
							"org.xtext.riskmanagement.RM.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionAccess().getActionAction_0(),
					$current);
			}
		)
		otherlv_1='Action'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getActionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.riskmanagement.RM.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='asset'
			{
				newLeafNode(otherlv_4, grammarAccess.getActionAccess().getAssetKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getAssetAssetParserRuleCall_4_2_0());
					}
					lv_asset_6_0=ruleAsset
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"asset",
							lv_asset_6_0,
							"org.xtext.riskmanagement.RM.Asset");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getActionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getAssetAssetParserRuleCall_4_3_1_0());
						}
						lv_asset_8_0=ruleAsset
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"asset",
								lv_asset_8_0,
								"org.xtext.riskmanagement.RM.Asset");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Rule View
ruleView returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Positive'
			{
				$current = grammarAccess.getViewAccess().getPositiveEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getViewAccess().getPositiveEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Neutral'
			{
				$current = grammarAccess.getViewAccess().getNeutralEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getViewAccess().getNeutralEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Negative'
			{
				$current = grammarAccess.getViewAccess().getNegativeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getViewAccess().getNegativeEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
